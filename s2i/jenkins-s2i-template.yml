apiVersion: v1
kind: Template
metadata:
  name: jenkins-master-s2i
labels:
  template: jenkins-master-s2i
metadata:
  annotations:
    openshift.io/display-name: Jenkins Master (S2I)
    description: Creates a Jenkins master using S2I for installing plugins and configuring Jenkins
    iconClass: icon-jenkins
    tags: instant-app,jenkins
  name: jenkins-master-s2i
parameters:
- description: Git source URI for Jenkins S2I
  name: SOURCE_REPOSITORY_URL
  required: true
  value: "https://github.com/scoheb/aos-jenkins-master-config.git"
- description: Git branch/tag reference
  name: SOURCE_REPOSITORY_REF
  value: "master"
- description: Path within Git project to build; empty for root project directory.
  name: CONTEXT_DIR
  value: "s2i/jenkins_files"
- description: Maximum amount of memory the container can use.
  displayName: Memory Limit
  name: MEMORY_LIMIT
  value: "256Mi"
- description: Volume space available for data, e.g. 512Mi, 2Gi.
  displayName: Volume Capacity
  name: VOLUME_CAPACITY
  required: true
  value: "1Gi"
- description: The name of the OpenShift Service exposed for the Jenkins container.
  displayName: Jenkins Service Name
  name: JENKINS_SERVICE_NAME
  value: "jenkins"
- description: The name of the service used for master/slave communication.
  displayName: Jenkins JNLP Service Name
  name: JNLP_SERVICE_NAME
  value: "jenkins-jnlp"
- description: Whether to enable OAuth OpenShift integration. If false, the static account 'admin' will be initialized with the password 'password'.
  displayName: Enable OAuth in Jenkins
  name: ENABLE_OAUTH
  value: "true"
- description: Name of the ImageStreamTag to be used for the Jenkins image.
  displayName: Jenkins ImageStreamTag
  name: JENKINS_IMAGE_STREAM_TAG
  value: "jenkins:latest"
objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: ${JENKINS_SERVICE_NAME}
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.jenkins: "{\"kind\":\"OAuthRedirectReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"Route\",\"name\":\"${JENKINS_SERVICE_NAME}\"}}"
- apiVersion: v1
  kind: ImageStream
  metadata:
    labels:
      app: ${JENKINS_SERVICE_NAME}
    name: ${JENKINS_SERVICE_NAME}
- apiVersion: v1
  kind: RoleBinding
  metadata:
    name: ${JENKINS_SERVICE_NAME}_edit
  groupNames: null
  subjects:
  - kind: ServiceAccount
    name: ${JENKINS_SERVICE_NAME}
  roleRef:
    name: edit
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jenkins
    name: ${JENKINS_SERVICE_NAME}
  spec:
    ports:
    - name: web
      port: 8080
      protocol: TCP
      targetPort: 8080
    - name: jnlp
      port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      app: ${JENKINS_SERVICE_NAME}
      deploymentconfig: ${JENKINS_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: jenkins
    name: ${JNLP_SERVICE_NAME}
  spec:
    ports:
    - name: jnlp
      port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      app: ${JENKINS_SERVICE_NAME}
      deploymentconfig: ${JENKINS_SERVICE_NAME}
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      app: ${JENKINS_SERVICE_NAME}
    name: ${JENKINS_SERVICE_NAME}
  spec:
    port:
      targetPort: 8080
    to:
      kind: Service
      name: ${JENKINS_SERVICE_NAME}
- apiVersion: v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${JENKINS_SERVICE_NAME}
    name: ${JENKINS_SERVICE_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${JENKINS_SERVICE_NAME}:latest
    resources:
      limits:
        memory: ${MEMORY_LIMIT}
    source:
      contextDir: ${CONTEXT_DIR}
      git:
        uri: ${SOURCE_REPOSITORY_URL}
        ref: ${SOURCE_REPOSITORY_REF}
      secrets: []
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: ${JENKINS_IMAGE_STREAM_TAG}
          namespace: openshift
      type: Source
    triggers:
    - type: ConfigChange
    - imageChange: {}
      type: ImageChange
  status:
    lastVersion: 0
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      app: ${JENKINS_SERVICE_NAME}
    name: ${JENKINS_SERVICE_NAME}
  spec:
    replicas: 1
    selector:
      app: ${JENKINS_SERVICE_NAME}
      deploymentconfig: ${JENKINS_SERVICE_NAME}
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: ${JENKINS_SERVICE_NAME}
          deploymentconfig: ${JENKINS_SERVICE_NAME}
      spec:
        containers:
        - volumeMounts:
          - mountPath: /var/lib/jenkins
            name: jenkins-data
          env:
          - name: OPENSHIFT_ENABLE_OAUTH
            value: ${ENABLE_OAUTH}
          - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
            value: "true"
          - name: KUBERNETES_MASTER
            value: "https://kubernetes.default:443"
          - name: KUBERNETES_TRUST_CERTIFICATES
            value: "true"
          - name: JNLP_SERVICE_NAME
            value: ${JNLP_SERVICE_NAME}
          image: ${JENKINS_SERVICE_NAME}
          imagePullPolicy: Always
          name: ${JENKINS_SERVICE_NAME}
          resources: {}
          terminationMessagePath: /dev/termination-log
        ports:
          - containerPort: 8080
            protocol: TCP
          - containerPort: 50000
            protocol: TCP
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 30
        serviceAccountName: ${JENKINS_SERVICE_NAME}
        volumes:
        - name: jenkins-data
          emptyDir: {}
    triggers:
    - type: ConfigChange
    - imageChangeParams:
        automatic: true
        containerNames:
        - ${JENKINS_SERVICE_NAME}
        from:
          kind: ImageStreamTag
          name: ${JENKINS_IMAGE_STREAM_TAG}
      type: ImageChange
